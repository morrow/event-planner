{"version":3,"sources":["EventPlannerEvent.js"],"names":["EventPlannerEvent","eventPlanner","eventData","self","this","attributes","forEach","attribute","undefined","prototype","render","output","template","innerHTML","replace","token","eval","call","sortElements","request","XMLHttpRequest","addEventListener","e","target","responseText","open","send","events","document","querySelectorAll","sorted_elements","map","x","sort","a","b","parseInt","id","length","element","outerHTML","getIndefiniteArticle","noun","match","getStartDate","Date","start","toLocaleDateString","navigator","language","weekday","month","day","year","getStartTime","toLocaleTimeString","hour","minute","getEndDate","getEndTime","end"],"mappings":"AAAA,QAASA,mBAAkBC,EAAcC,GACvC,GAAIC,GAAOC,IACXA,MAAKH,aAAeA,EACpBG,KAAKC,YAAc,KAAM,OAAQ,OAAQ,OAAQ,WAAY,QAAS,MAAO,WAAY,OAAQ,aACjGD,KAAKC,WAAWC,QAAQ,SAASC,GACHC,SAAzBN,EAAUK,KACXJ,EAAKI,GAAaL,EAAUK,MAKlCP,kBAAkBS,UAAUC,OAAS,SAASC,QAC5C,GAAIR,MAAOC,IAEX,IAAGA,KAAKQ,SAEND,OAAOE,WAAaT,KAAKQ,SAASE,QAAQ,eAAgB,SAASC,OACjE,MAAO,YACL,MAAmBP,UAAhBQ,KAAKD,OAA+BC,KAAKD,OACrC,IACPE,KAAKd,QAGTC,KAAKc,aAAaP,YACb,CAEL,GAAIQ,SAAU,GAAIC,eAClBD,SAAQE,iBAAiB,OAAQ,SAASC,GACxCnB,KAAKS,SAAWU,EAAEC,OAAOC,aACzBrB,KAAKO,OAAOC,UAEdQ,QAAQM,KAAK,MAAO,kBACpBN,QAAQO,SAIZ1B,kBAAkBS,UAAUS,aAAe,SAASP,GAElD,GAAIgB,GAASC,SAASC,iBAAiB,UAEnCC,KAAqBC,IAAId,KAAKU,EAAQ,SAASK,GAAI,MAAOA,KAAMC,KAAK,SAASC,EAAEC,GAAI,MAAOC,UAASF,EAAEG,IAAMD,SAASD,EAAEE,KAExHV,GAAOW,QAAUlC,KAAKH,aAAa0B,OAAOW,SAC3C3B,EAAOE,UAAYiB,EAAgBC,IAAI,SAASQ,GAAU,MAAOA,GAAQC,cAI7ExC,kBAAkBS,UAAUgC,qBAAuB,SAASC,GAC1D,MAAYlC,UAATkC,EACEA,EAAK,GAAGC,MAAM,cACR,KAEA,IAJX,QASF3C,kBAAkBS,UAAUmC,aAAe,WACzC,MAAO,IAAKC,MAAKzC,KAAK0C,OAAQC,mBAAmBC,UAAUC,UAAWC,QAAS,OAAQC,MAAM,OAAQC,IAAK,UAAWC,KAAK,aAG5HrD,kBAAkBS,UAAU6C,aAAe,WACzC,MAAO,IAAKT,MAAKzC,KAAK0C,OAAQS,mBAAmBP,UAAUC,UAAWO,KAAK,UAAWC,OAAQ,aAGhGzD,kBAAkBS,UAAUiD,WAAa,WACvC,MAAO,IAAKb,MAAKzC,KAAK0C,OAAQC,mBAAmBC,UAAUC,UAAWC,QAAS,OAAQC,MAAM,OAAQC,IAAK,UAAWC,KAAK,aAG5HrD,kBAAkBS,UAAUkD,WAAa,WACvC,MAAO,IAAKd,MAAKzC,KAAKwD,KAAML,mBAAmBP,UAAUC,UAAWO,KAAK,UAAWC,OAAQ","file":"EventPlannerEvent.js","sourcesContent":["function EventPlannerEvent(eventPlanner, eventData){\n  var self = this;\n  this.eventPlanner = eventPlanner;\n  this.attributes = ['id', 'name', 'type', 'host', 'location', 'start', 'end', 'capacity', 'info', 'guestlist'];\n  this.attributes.forEach(function(attribute){\n    if(eventData[attribute] !== undefined){\n      self[attribute] = eventData[attribute];\n    }\n  });\n}\n\nEventPlannerEvent.prototype.render = function(output){\n  var self = this;\n  // render template if loaded, otherwise load template\n  if(this.template){\n    // replace handlebar tokens with evaluated result of token code\n    output.innerHTML += this.template.replace(/\\{\\{.*?\\}\\}/g, function(token){\n      return function() {\n        if(eval(token) !== undefined) { return eval(token); }\n        return '';\n      }.call(self);\n    });\n    // sort elements\n    this.sortElements(output);\n  } else {\n    // load template\n    var request = new XMLHttpRequest();\n    request.addEventListener('load', function(e){\n      self.template = e.target.responseText;\n      self.render(output);\n    });\n    request.open('GET', 'event.hbs.html');\n    request.send();\n  }\n};\n\nEventPlannerEvent.prototype.sortElements = function(output){\n  // get all event elements\n  var events = document.querySelectorAll('.event');\n  // sort elements by event id\n  var sorted_elements = [].map.call(events, function(x){ return x; }).sort(function(a,b){ return parseInt(a.id) > parseInt(b.id); });\n  // if all events are rendered, replace existing event list with sorted event list\n  if(events.length == this.eventPlanner.events.length){\n    output.innerHTML = sorted_elements.map(function(element){ return element.outerHTML; });\n  }\n};\n\nEventPlannerEvent.prototype.getIndefiniteArticle = function(noun){\n  if(noun !== undefined){\n    if(noun[0].match(/a|e|i|o|u/i)){\n      return 'An';\n    } else {\n      return 'A';\n    }\n  }\n};\n\nEventPlannerEvent.prototype.getStartDate = function(){\n  return (new Date(this.start)).toLocaleDateString(navigator.language, {weekday: 'long', month:'long', day: 'numeric', year:'numeric'});\n};\n\nEventPlannerEvent.prototype.getStartTime = function(){\n  return (new Date(this.start)).toLocaleTimeString(navigator.language, {hour:'2-digit', minute: '2-digit'});\n};\n\nEventPlannerEvent.prototype.getEndDate = function(){\n  return (new Date(this.start)).toLocaleDateString(navigator.language, {weekday: 'long', month:'long', day: 'numeric', year:'numeric'});\n};\n\nEventPlannerEvent.prototype.getEndTime = function(){\n  return (new Date(this.end)).toLocaleTimeString(navigator.language, {hour:'2-digit', minute: '2-digit'});\n};\n"],"sourceRoot":"/source/"}